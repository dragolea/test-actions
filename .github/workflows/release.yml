# This will increase package.json version, create tags and release

name: Release

on:
  workflow_dispatch:
    inputs:
      bump:
        description: 'Bump type:  patch (0.0.x), minor (0.x.0), major (x.0.0)'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

        default: patch

permissions:
  contents: write

jobs:
  # This will increase package.json version based on the inputs from workflow_dispatch
  bump-version:
    name: 'Bump: version increase'
    if:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: 'Save version to .env'
        env:
          IS_MINOR_FOUND: ${{ contains(github.event.inputs.bump, 'minor') }}
          IS_PATCH_FOUND: ${{ contains(github.event.inputs.bump, 'patch') }}
          IS_MAJOR_FOUND: ${{ contains(github.event.inputs.bump, 'major') }}
        run: |
          if [ "${IS_MINOR_FOUND}" == "true" ]; then
            echo "version=minor" >> $GITHUB_ENV
            echo "Version: minor"
          elif [ "${IS_PATCH_FOUND}" == "true" ]; then
            echo "version=patch" >> $GITHUB_ENV
            echo "Version: patch"
          else
            echo "version=major" >> $GITHUB_ENV
            echo "Version: major"
          fi

      - name: 'Automated: version bump (package.json)'
        id: version-bump
        uses: phips28/gh-action-bump-version@v10.1.1
        with:
          version-type: ${{ env.version }}
          minor-wording: minor
          major-wording: major
          patch-wording: patch
          target-branch: main
          skip-tag: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # This will create automatic tags based on the last 50 comits and it will create latest release
  release:
    name: 'Create: tags and release'
    needs: bump-version
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: patch
          release_name: 'Release <RELEASE_VERSION>'
          tag_prefix: 'v'

  # This will start build of the project
  build:
    name: 'Start: build'
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm run build

  # This will push the latest build of the project to npm
  publish-npm:
    name: 'Publish: npm public'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - run: npm run build
      # - run: npm publish --access public
      #   env:
      #     NODE_AUTH_TOKEN: ${{secrets.npm_token}}
